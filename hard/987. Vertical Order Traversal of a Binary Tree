/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    void helper(TreeNode* root, unordered_map<int, vector<int>>& m, int X){
        if(root == NULL)
            return;
        
        m[X].push_back(root->val);
        
        helper(root->left, m, X - 1);
        helper(root->right, m, X + 1);
    }
    
    
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        if(root == NULL)
            return {};
        
        unordered_map<int, vector<int>>m;
        
        helper(root, m, 0);
        
        vector<vector<int>>ans;
        
        for(auto it: m){
            ans.push_back(it.second);
        }
        
        return ans;
    }
};
