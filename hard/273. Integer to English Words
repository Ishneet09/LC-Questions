-------------590 / 601 CASES PASSED-------------


class Solution {
private:
    
    unordered_map<int, string>table0_19 = 
    { {1, "One"}, {2, "Two"}, {3, "Three"}, {4, "Four"}, {5, "Five"}, {6, "Six"}, {7, "Seven"}, {8, "Eight"}, {9, "Nine"}, {10, "Ten"}, {11, "Eleven"}, {12, "Twelve"}, {13, "Thirteen"}, {14, "Fourteen"}, {15, "Fifteen"}, {16, "Sixteen"}, {17, "Seventeen"}, {18, "Eighteen"}, {19, "Nineteen"} };
    
    vector<string> table20_99 = 
    { "", "", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety" };
    
    
    string intToStr(int num){
        string name = "";
        
        if(num == 0)
            return "";
        
        if(num > 99){
            name += table0_19[num / 100] + " Hundred ";
            num = num % 100;
        }
        if(num >= 20 && num <=  99){
            name += table20_99[num / 10];
            
            if(num % 10 != 0)
                 name += " " + table0_19[num % 10];
        }
        else if(num <= 19){
            name += table0_19[num];
        }
        
        return name;
    }
    

    
public:
    string numberToWords(int num) {
        
        if(num == 0)
            return "Zero";
        
        
        vector<string>result;
        
        string currentSet = intToStr(num % 1000);
        
        if(currentSet != "")
           result.push_back(currentSet);
        num = num / 1000;
        
        if(num % 1000 != 0){
            string currentSet = intToStr(num % 1000) + " Thousand";
            if(currentSet != "")
              result.push_back(currentSet);
        }
        num = num / 1000;

        
        if(num % 1000 != 0){
            string currentSet = intToStr(num % 1000) + " Million";
            
            if(currentSet != "")
               result.push_back(currentSet);
        }
        num = num / 1000;

        
        if(num % 1000 != 0){
            string currentSet = intToStr(num % 1000) + " Billion";
            
            if(currentSet != "")
              result.push_back(currentSet);
            num = num / 1000;
        }
        
        reverse(result.begin(), result.end());
        
        string numberName = "";
        
        for(string str: result){
            numberName += str + " ";
        }
        
        while(numberName.back() == ' ')
          numberName.pop_back(); 
        
        return numberName;
    }
};
