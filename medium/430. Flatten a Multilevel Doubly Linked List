class Solution {
public:
    
    Node* getChildListEnd(Node* childListStart){
        while(childListStart->next != NULL){
            childListStart = childListStart->next;
        }
        
        return childListStart;
    }
    
    
    Node* flatten(Node* head) {
        
        if(head == NULL)
            return NULL;
        
        Node* headCopy = head;
        
        while(headCopy != NULL){
            if(headCopy->child != NULL){
                Node* headCopyNext = headCopy->next;
                Node* childListStart = headCopy->child;
                Node* childListEnd = getChildListEnd(childListStart);
                
                if(headCopyNext != NULL){
                    headCopy->next = childListStart;
                    childListStart->prev = headCopy;
                    headCopyNext->prev = childListEnd;
                    childListEnd->next = headCopyNext;
                }
                else{
                    headCopy->next = childListStart;
                    childListStart->prev = headCopy;
                }
                
                headCopy->child = NULL;
            }
            headCopy = headCopy->next;
        }
        
        return head;
    }
};
