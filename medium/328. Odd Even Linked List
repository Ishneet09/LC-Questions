/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head == NULL)
            return NULL;
        
        ListNode* evenStart = head->next;
        ListNode* oddPtr = head;
        ListNode* evenPtr = head->next;
        
        while(oddPtr && oddPtr->next && evenPtr && evenPtr->next){
            oddPtr->next = evenPtr->next;
            oddPtr = oddPtr->next;
            
            evenPtr->next = oddPtr->next;
            evenPtr = evenPtr->next;
        }
        
        oddPtr->next = evenStart;
        
        return head;
        
        
    }
};
