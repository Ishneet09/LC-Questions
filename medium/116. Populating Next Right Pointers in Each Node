/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
    Node* connect(Node* root) {
        
        if(root == NULL)
            return NULL;
        
        if(root->left == NULL && root->right == NULL){
            return root;
        }
        
        queue<Node*>treeQ;
        treeQ.push(root);
        treeQ.push(NULL);
        
        while(treeQ.size() != 0){
            Node* front = treeQ.front();
            treeQ.pop();
            
            if(front == NULL){
                if(treeQ.size() == 0)
                    break;
                
                treeQ.push(NULL);
                continue;
            }
            
            front->next = treeQ.front();
            
            if(front->left)
                treeQ.push(front->left);
            
            if(front->right)
                treeQ.push(front->right);
        }
        
        return root;
        
    }
};
