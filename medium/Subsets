class Solution {
public:
    vector<vector<int>> helper(vector<int>& nums, int l,int r){
      vector<vector<int>>ans;
        if(l == r)
            return {{}, {nums[l]}};
        
        
        vector<vector<int>>temp = helper(nums, l + 1, r);
        
        for(int i = 0; i < temp.size(); i++){
           ans.push_back(temp[i]);
        }
        
        for(int i = 0; i < temp.size(); i++){
            vector<int>x = temp[i];
            x.insert(x.begin(), nums[l]);
            ans.push_back(x);
        }
         
         return ans;
    }
    
    
    vector<vector<int>> subsets(vector<int>& nums) {
        if(nums.size() == 0)
            return {};
        if(nums.size() == 1){
            return {{}, {nums[0]}};
        }
        
        return helper(nums, 0, nums.size() - 1);
    }
};
