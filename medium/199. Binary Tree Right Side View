/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int>ans;
        
        if(root == NULL)
            return {};
        
        if(root == NULL && root->right == NULL)
            return {root->val};
        
        queue<TreeNode*>q;
        q.push(root);
        q.push(NULL);
        
        TreeNode* front;
        TreeNode* prev;
        
        while(q.size() != 0){
            front = q.front();
            q.pop();
            
            if(front == NULL){
                ans.push_back(prev->val);
                
                if(q.size() == 0)
                    break;
                q.push(NULL);
                continue;
            }
            
            if(front->left)
                q.push(front->left);
            if(front->right)
                q.push(front->right);
            
            prev = front;
        }
        
        return ans;
    }
};
