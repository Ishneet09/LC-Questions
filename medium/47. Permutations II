class Solution {
public:
    vector<vector<int>> helper(vector<int>& nums){
        if(nums.size() == 1)
            return {{nums[0]}};
        
        vector<vector<int>>ans;
        
        for(int i = 0; i < nums.size(); i++){
            if(i > 0 && nums[i] == nums[i - 1])
                continue;
            
            int firstElement = nums[i];
            nums.erase(nums.begin() + i);
            vector<vector<int>>temp = helper(nums);
            
            for(int i = 0; i < temp.size(); i++){
                temp[i].insert(temp[i].begin(), firstElement);
                ans.push_back(temp[i]);
            }
            nums.insert(nums.begin() + i, firstElement);
        }
        return ans;
    }
    
    
    vector<vector<int>> permuteUnique(vector<int>& nums) {
        if(nums.size() == 0)
            return {};
        
        if(nums.size() == 1)
            return {{nums[0]}};
        
        sort(nums.begin(), nums.end());
        
        return helper(nums);
    }
};
