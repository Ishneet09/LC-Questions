/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    
   ListNode* merge(ListNode* head1, ListNode* head2){
       if(head1 == NULL && head2 == NULL)
           return NULL;
       
       if(head1 == NULL)
           return head2;
       
       if(head2 == NULL)
           return head1;
       
       ListNode* head = NULL;
       ListNode* tail = NULL;
       
       if(head1->val <= head2->val){
           head = head1;
           tail = head1;
           head1 = head1->next;
       }
       
       else if(head2->val < head1->val){
           head = head2;
           tail = head2;
           head2 = head2->next;
       }
       
       
       while(head1 != NULL && head2 != NULL){
           
           if(head1->val <= head2->val){
               tail->next = head1;
               tail = head1;
               head1 = head1->next;
           }
           
           else if(head2->val < head1->val){
               tail->next = head2;
               tail = head2;
               head2 = head2->next;
           }
           
       }
       
       if(head1 != NULL){
           tail->next = head1;
       }
       
       else if(head2 != NULL){
           tail->next = head2;
       }
       
       return head;
   }
    
    
    
    ListNode* listsort(ListNode* head, ListNode* tail){
        
        if(head == NULL || head->next == NULL)
            return head;
        
        ListNode*slow = head;
        ListNode*fast = head;
        ListNode* temp = head;

        
        while(fast != NULL && fast->next != NULL){
            temp = slow;
            slow = slow->next;
            fast = fast->next->next;
        }
        
        temp->next = NULL;
        
        ListNode* head1 = listsort(head, temp);
        ListNode* head2 = listsort(slow, tail);
        
        ListNode* ans = merge(head1, head2);
        
        return ans;
    }
    
    
    
    
    ListNode* sortList(ListNode* head) {
        if(head == NULL)
            return NULL;
        
        ListNode* temp = head;
        
        while(temp->next != NULL){
            temp = temp->next;
        }
        
        return listsort(head, temp);
    }
};
