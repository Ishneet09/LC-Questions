class Solution {
public:
    void traverseIslands(vector<vector<char>>&grid, int i, int j, int rows, int cols){
        if(i < 0 || j < 0 || i >= rows || j >= cols || grid[i][j] == '0')
            return;
        grid[i][j] = '0';
        traverseIslands(grid, i - 1, j, rows, cols);
        traverseIslands(grid, i + 1, j, rows, cols);
        traverseIslands(grid, i, j - 1, rows, cols);
        traverseIslands(grid, i, j + 1, rows, cols);
        
        return;
    }
    
    
    int numIslands(vector<vector<char>>& grid) {
        int rows = grid.size();
        if(rows == 0)
            return 0;
        int cols = grid[0].size();
        
        int islands = 0;
        
        for(int i = 0; i < rows; i++){
            for(int j = 0; j < cols; j++){
                if(grid[i][j] == '1'){
                traverseIslands(grid, i, j, rows, cols);
                islands++;
                }
            }
        }
        return islands;
    }
};
