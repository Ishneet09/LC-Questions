class Solution {
public:
    
    int numsSwap(int target, vector<int>A, vector<int>B){
        int minSwaps = 0;
        
        for(int i = 0; i < A.size(); i++){
            if(target != A[i] && target != B[i])
                return INT_MAX;
            else if(A[i] != target)
                minSwaps++;
        }
        return minSwaps;
    }
    
    
    int minDominoRotations(vector<int>& A, vector<int>& B) {
       int minSwaps = min(numsSwap(A[0], A, B), numsSwap(B[0], A, B));
       minSwaps = min(numsSwap(A[0], B, A), minSwaps);
       minSwaps = min(minSwaps, numsSwap(B[0], B, A));
        
        if(minSwaps == INT_MAX)
            return -1;
        return minSwaps;

    }
};
