class Solution {
public:
    
    vector<int> searchRangeHelper(vector<int>& nums, int target, int left, int right){
        while(left <= right){
            
            int mid = left + (right - left) / 2;
            
            if(nums[mid] == target){
                int start = mid;
                int end = mid;
                
                while(start - 1 >= 0 && nums[start - 1] == target)
                    start--;
                while(end + 1 < nums.size() && nums[end + 1] == target)
                    end++;
                
                return {start, end};
            }
            
            else if(nums[mid] < target)
                left = mid + 1;
            else
                right = mid - 1;
            
        }
        
        return {-1, -1};
        
    }
    
    
    vector<int> searchRange(vector<int>& nums, int target) {
        if(nums.size() == 0){
            return {-1, -1};
        }
        
        return searchRangeHelper(nums, target, 0, nums.size() - 1);
    }
};
