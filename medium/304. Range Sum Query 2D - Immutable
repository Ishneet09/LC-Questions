// rangeSum[r+1][c+1] rep range sum from (0, 0) to (r,c)
// read soln + comments
class NumMatrix {
private:
    
    vector<vector<int>>rangeSum;
    
public:
    NumMatrix(vector<vector<int>>& matrix) {
        
        int rows = matrix.size();
        int columns = matrix[0].size();
        rangeSum.assign(rows + 1, vector<int>(columns + 1, 0));
        
        for(int r = 0; r < rows; r++){
            for(int c = 0; c < columns; c++){
                rangeSum[r + 1][c + 1] = rangeSum[r + 1][c] + rangeSum[r][c + 1] + matrix[r][c] - rangeSum[r][c];
            }
        }
    }
    
    int sumRegion(int row1, int col1, int row2, int col2) {
        return rangeSum[row2 + 1][col2 + 1] - rangeSum[row2 + 1][col1] - rangeSum[row1][col2 + 1] + rangeSum[row1][col1];
    }
};

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix* obj = new NumMatrix(matrix);
 * int param_1 = obj->sumRegion(row1,col1,row2,col2);
 */
