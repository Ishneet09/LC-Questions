class Solution {
public:
    
    bool binarySearch(vector<int>& nums, int target){
        int start = 0;
        int end = nums.size() - 1;
        
        while(start <= end){
            int mid = start + (end - start)/2;
            if(nums[mid] == target)
                return true;
            else if(nums[mid] < target)
                start = mid + 1;
            else
                end = mid - 1;
        }
        return false;
    }
    
    
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int m = matrix.size();
        if(m == 0)
            return false;
        int n = matrix[0].size();
        if( n == 0)
            return false;
        
        for(int i = 0; i < m; i++){
            vector<int>nums = matrix[i];
            if(target >= matrix[i][0] && target <= matrix[i][n - 1])
                return binarySearch(nums, target);
        }
        
        return false;
    }
};
