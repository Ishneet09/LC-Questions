//https://leetcode.com/problems/unique-binary-search-trees/discuss/710516/C%2B%2B%3A-Recursive-DP-Simple-Explanation-beats-100

class Solution {
public:
    
    int* store;

    int count(int n){
        if (n < 0)
		    return 0;
         if(n == 0){
            store[n] = 1;
            return 1;
         }
        if(n == 1){
            store[n] = 1;
            return store[n];
        }
        if(n == 2){
            store[n] = 2;
            return store[n];
        }
        
         if(store[n] != -1)
             return store[n];
       
        int sum = 0;
        for(int i = 1; i <= n; i++){
            sum += count(i - 1) * count(n - i);
        }
        
        store[n] = sum;
        
        return store[n];
    }
    
    
    int numTrees(int n) {
        store = new int[n + 1];
        for(int i = 0; i <= n; i++){
            store[i] = -1;
        }
        
        return count(n);
    }
};
