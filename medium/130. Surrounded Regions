class Solution {
public:
    
    void dfs(vector<vector<char>>& board, int i, int j, int rows, int columns){
        
        if(i >= rows || i < 0 || j >= columns || j < 0 || board[i][j] == 'X' || board[i][j] == '*')
            return;
        
        if(board[i][j] == 'O')
            board[i][j] = '*';
        
           dfs(board, i + 1, j, rows, columns);
           dfs(board, i - 1, j, rows, columns);
           dfs(board, i, j + 1, rows, columns);
           dfs(board, i, j - 1, rows, columns);
    }
    
    
    void solve(vector<vector<char>>& board) {
        if(board.size() == 0){
            return;
        }
        
        int rows = board.size();
        int columns = board[0].size();
        
        // first and last row
        for(int j = 0; j < columns; j++){
            if(board[0][j] == 'O')
                dfs(board, 0, j, rows, columns);
            if(board[rows - 1][j] == 'O')
                dfs(board, rows - 1, j, rows, columns);
        }
        
        // first and last col
        for(int i = 0; i < rows; i++){
            if(board[i][0] == 'O')
                dfs(board, i, 0, rows, columns);
            if(board[i][columns - 1] == 'O')
                dfs(board, i, columns - 1, rows, columns);
        }
        
        for(int i = 0; i < rows; i++){
            for(int j = 0; j < columns; j++){
                if(board[i][j] == 'O')
                    board[i][j] = 'X';
                else if(board[i][j] == '*')
                    board[i][j] = 'O';
            }
        }
        
        return;
    }
};
