class Solution {
public:
    
    
    vector<int> topKFrequent(vector<int>& nums, int k) {
        if(k == nums.size())
            return nums;
        
        if(k == 1 && nums.size() == 1)
            return nums;
        
        unordered_map<int, int>map;
        
        for(int i = 0; i < nums.size(); i++){
            map[nums[i]]++;
        }
        
        priority_queue<pair<int, int>>pq;
        
        for(auto it : map){
            pq.push({it.second, it.first});
        }
        
        int temp = 0;
        
        vector<int>result;
        
        while(temp < k){
            pair<int, int> p = pq.top();
            pq.pop();
            result.push_back(p.second);
            temp++;
        }
        return result;
    }
};
