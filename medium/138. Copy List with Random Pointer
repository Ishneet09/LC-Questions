/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        if(head == NULL)
            return NULL;
        
        unordered_map<Node*, Node*>keeper;
        
        Node* temp = head;
        
        while(temp != NULL){
            Node* newNode = new Node(temp->val);
            keeper[temp] = newNode;
            temp = temp->next;
        }
        
        temp = head;
        keeper[NULL] = NULL;
        
        while(temp != NULL){
            keeper[temp]->next = keeper[temp->next];
            keeper[temp]->random = keeper[temp->random];
            temp = temp->next;
        }
        
        return keeper[head];
    }
};
