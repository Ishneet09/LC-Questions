class Solution {
public:
    int numSubarrayProductLessThanK(vector<int>& nums, int k) {
        if (k <= 1) 
            return 0;

        int count = 0;
        int windowStart = 0;
        int currentProd = 1;
        
        for(int windowEnd = 0; windowEnd < nums.size(); windowEnd++){
            currentProd = currentProd * nums[windowEnd];
            
            while(currentProd >= k){
                currentProd /= nums[windowStart];
                windowStart++;
            }
            count += windowEnd - windowStart + 1;
        }
        return count;
    }
};
