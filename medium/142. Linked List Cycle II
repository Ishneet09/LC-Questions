/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        ListNode* fast = head;
        ListNode* slow = head;
        
        if(head == NULL)
            return NULL;
        if(head->next == NULL)
            return NULL;
        
        do{
            fast = fast->next->next;
            slow = slow->next;
        }while(slow != fast && fast && fast->next);
        
        slow = head;
        
        while(slow != fast && fast){
            fast = fast->next;
            slow = slow->next;
        }
       
        if(slow == fast)
         return slow;
        
        return NULL;
    }
};
