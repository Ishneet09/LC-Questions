class Solution {
public:
    
    vector<int> square(vector<int>A){
        vector<int>ans;
        
        for(int i = 0; i < A.size(); i++){
            ans.push_back(A[i] * A[i]);
        }
        return ans;
    }
    
    vector<int> sortedSquares(vector<int>& A) {
        if(A.size() == 0)
            return {};
        
        vector<int>ans;
        int index = -1;
       
       //All positive elements
        if(A[0] >= 0)
            return square(A);
        
        //All negative elements
        if(A[A.size() - 1] < 0){
            vector<int>temp = square(A);
            for(int i = temp.size() - 1; i>= 0; i--){
                ans.push_back(temp[i]);
            }
            return ans;
        }
        
        //Both positive and negative elements
        for(int i = 0; i < A.size(); i++){
            if(A[i] >= 0){
                index = i;
                break;
            }
        }
        
        vector<int> temp = square(A);
        int i = index - 1, j = index;
         
        while(i >= 0 && j <= A.size() - 1){
            if(temp[i] <= temp[j]){
                ans.push_back(temp[i]);
                i--;
            }
            else if(temp[j] < temp[i]){
                ans.push_back(temp[j]);
                j++;
            }
        }
        
            while( i >= 0){
                ans.push_back(temp[i]);
                i--;
            }
        
        
            while( j <= temp.size() - 1){
                ans.push_back(temp[j]);
                j++;
            }
        
     
        return ans;
    }
};
