class Solution {
public:
    int findJudge(int N, vector<vector<int>>& trust) {
        
        if(N == 1){
            return 1;
        }
        
        if(trust.size() == 0){
            return -1;
        }
        
        unordered_map<int, int>peopleTrustFrequency;
        
        for(int i = 0; i < trust.size(); i++){
            peopleTrustFrequency[trust[i][1]]++;
        }
        
        
        int judge = -1;
        
        for(auto judgeCandidate: peopleTrustFrequency){
            if(judgeCandidate.second == N - 1){
                judge = judgeCandidate.first;
            }
        }
        
            if(judge == -1)
                return -1;
            
            for(int i = 0; i < trust.size(); i++){
                if(judge == trust[i][0])
                    return -1;
            }
            
            return judge;
        
    }
};
