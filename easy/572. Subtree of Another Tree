/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool sameTree(TreeNode* s, TreeNode* t){
         if(s == NULL && t == NULL)
            return true;
         if(s == NULL)
            return false;
         if(t == NULL)
            return false;
        
        bool left = sameTree(s->left, t->left);
        bool rt = sameTree(s->right, t->right);
        

        return (left && rt && s->val == t->val);

    }
   
    
    bool isSubtree(TreeNode* s, TreeNode* t) {
        if(s == NULL && t == NULL)
            return true;
        if(s == NULL)
            return false;
        if(t == NULL)
            return false;
      
        return sameTree(s, t) || isSubtree(s->left, t) || isSubtree(s->right, t);
    }
};
