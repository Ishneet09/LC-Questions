class Solution {
public:
    int peakIndexInMountainArray(vector<int>& A) {
        if(A.size() < 3)
            return -1;
              
        
        int left = 0;
        int right = A.size() - 1;
        int index;
        
        while(left <= right){
            int mid = left + (right - left) / 2;
            // possible that the first index where this occurs is more towards the left
            if(A[mid] > A[mid + 1]){
                index = mid;
                right = mid - 1;
            }
            // we move right to find our anamoly
            else{
                left = mid + 1;
            }
        }
        
        return index;
    }
};
