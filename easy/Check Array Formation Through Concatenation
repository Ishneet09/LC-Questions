class Solution {
public:
    bool canFormArray(vector<int>& arr, vector<vector<int>>& pieces) {
        if(arr.size() == 0 && pieces.size() == 0){
            return true;
        }
        
        if(arr.size() == 0 || pieces.size() == 0){
            return false;
        }
        
        unordered_map<int, int>map;
        
        for(int i = 0; i < arr.size(); i++){
            map[arr[i]] = i;
        }
        
        for(int i = 0; i < pieces.size(); i++){
            vector<int>temp = pieces[i];
            int tempFirstElement = temp[0];
            int firstElementIndex;
            
            if(map.count(tempFirstElement) > 0){
                firstElementIndex = map[tempFirstElement];
            }
            
            else{
                return false;
            }
            
            
            
            for(int j = 0; j < temp.size(); j++){
                if(firstElementIndex < arr.size() && arr[firstElementIndex] == temp[j]){
                    firstElementIndex++;
                    continue;
                }
                else{
                    return false;
                }
            }
        }
        return true;
    }
};
