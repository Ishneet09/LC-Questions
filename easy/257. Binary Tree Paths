/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void helper(TreeNode* root, vector<string>& paths, string curr){
        if(root == NULL){
            return;
        }
        
        if(root->left == NULL && root->right == NULL){
            curr += to_string(root->val);
            paths.push_back(curr);
            curr = "";
            return;
        }
        
        curr += to_string(root->val) + "->";
        
        helper(root->left, paths, curr);
        helper(root->right, paths, curr);
    }
    
    vector<string> binaryTreePaths(TreeNode* root) {
        
        if(root == NULL)
            return {};
        
        vector<string>paths;
        
        helper(root, paths, "");
        
        return paths;
    }
};
